1. 데이터 불러오기
import pandas as pd
# 데이터셋 불러오기 (Kaggle에서 다운로드 후 사용)
train_data = pd.read_csv('house_prices_train.csv')
# 데이터 확인
print(train_data.head())

2. 데이터 전처리
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
# 결측값 처리: 간단히 평균으로 채웁니다 (실제 상황에서는 더 정교한 방법 필요)
train_data.fillna(train_data.mean(), inplace=True)
# 범주형 데이터 인코딩
train_data = pd.get_dummies(train_data)
# 특성과 레이블 분리
X = train_data.drop('SalePrice', axis=1)
y = train_data['SalePrice']
# 데이터 정규화
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
# 학습 데이터와 테스트 데이터로 분할
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

3. 모델 선택 및 학습
from sklearn.linear_model import LinearRegression
# 모델 초기화
model = LinearRegression()
# 모델 학습
model.fit(X_train, y_train)

4. 모델 초기 평가
from sklearn.metrics import mean_squared_error
# 예측 수행
y_pred = model.predict(X_test)
# 성능 평가
mse = mean_squared_error(y_test, y_pred)
rmse = mse ** 0.5
print(f"Initial RMSE: {rmse}")

5. 교차검증을 통한 성능평가
 from sklearn.model_selection import cross_val_score
# 교차검증 수행 (neg_mean_squared_error는 음수 값을 반환하므로 -를 붙여 양수로 변환)
cv_scores = cross_val_score(model, X_scaled, y, cv=5, scoring='neg_mean_squared_error')
cv_rmse_scores = (-cv_scores) ** 0.5
print("Cross-validation RMSE scores:", cv_rmse_scores)
print("Mean CV RMSE score:", cv_rmse_scores.mean())
